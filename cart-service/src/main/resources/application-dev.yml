server:
  port: 2020
spring:
  data:
    redis:
      host: localhost
      port: 6379
  #  security:
  #    oauth2:
  #      resourceserver:
  #        jwt:
  #          issuer-uri: "http://172.22.0.202:8080/realms/e-commerce%20"
  kafka:
    bootstrap-servers: localhost:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer



axon:
  serializer:
    general: jackson
    events: jackson
    messages: jackson
  deserializer:
    general: jackson
    events: jackson
    messages: jackson
  kafka:
    bootstrap-servers: localhost:29092
    client-id: kafka-axon-example
    default-topic: local.event
    properties:
      security.protocol: PLAINTEXT

    publisher:
      confirmation-mode: none

    producer:
      retries: 5
      event-processor-mode: tracking


    fetcher:
      poll-timeout: 6000

    consumer:
      enable-auto-commit: true
      auto-commit-interval: 6000
      event-processor-mode: tracking